const fs = require('fs');
const path = require('path');
const cron = require('node-cron');
const processaBoletos = require('./processaBoletos');
const { initializeWhatsApp } = require('./sendMessage');
const persistenceService = require('./persistenceService');

// Vari√°veis de configura√ß√£o
const arquivoBoletos = path.join(__dirname, 'boletos.xlsx');

// Fun√ß√£o para verificar se o arquivo de boletos existe
function verificarArquivo() {
  console.log('Verificando arquivo de boletos...');
  if (!fs.existsSync(arquivoBoletos)) {
    console.error('‚ùå Arquivo de boletos n√£o encontrado!');
    return false;
  }
  console.log('‚úÖ Arquivo de boletos encontrado.');
  return true;
}

// Fun√ß√£o para agendar o envio de mensagens
function agendarEnvioDeMensagem() {
  console.log('üìÖ Agendamento di√°rio configurado para 8h da manh√£...');
  // Corre√ß√£o na express√£o cron: segundos minutos horas dia m√™s dia_semana
  cron.schedule('0 8 * * *', () => {
    console.log('‚ñ∂Ô∏è Execu√ß√£o di√°ria iniciada...');
    if (verificarArquivo()) {
      processaBoletos();
    }
  });
  
  // Opcional: Adicionar agendamento para gerar relat√≥rio no final do dia
  cron.schedule('0 18 * * *', () => {
    console.log('üìä Gerando relat√≥rio di√°rio...');
    const stats = persistenceService.obterEstatisticas();
    console.log(`
==== RELAT√ìRIO DI√ÅRIO ====
Data: ${new Date().toLocaleDateString()}
Mensagens enviadas hoje: ${stats.enviosHoje}
Total hist√≥rico: ${stats.totalEnviadas}
Status: ${JSON.stringify(stats.statusContagem)}
==========================
    `);
  });
}

// Fun√ß√£o principal
async function main() {
  try {
    console.log('üöÄ Iniciando Bot de Cobran√ßa...');
    
    // Inicializa o servi√ßo de persist√™ncia
    persistenceService.initializeHistoricoFile();
    console.log('‚úÖ Servi√ßo de persist√™ncia inicializado.');
    
    // Inicializa o cliente WhatsApp
    await initializeWhatsApp();
    
    // Verifica se o arquivo existe antes de processar
    if (verificarArquivo()) {
      // Processamento inicial dos boletos
      await processaBoletos();
    }
    
    // Configura o agendamento di√°rio
    agendarEnvioDeMensagem();
    
    console.log('‚úÖ Bot de cobran√ßa inicializado e pronto para uso!');
  } catch (error) {
    console.error('‚ùå Erro na execu√ß√£o principal:', error);
  }
}

// Inicia o programa
main();